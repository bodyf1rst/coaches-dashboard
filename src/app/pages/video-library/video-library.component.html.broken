<div class="video-library-container container-fluid py-3">
  <div class="header mb-4">
    <h2>Video Library</h2>
    <div class="controls d-flex gap-3 mb-3">
      <input type="text" class="form-control" style="max-width: 300px" 
             placeholder="Search videos..." 
             [(ngModel)]="searchQuery" 
             (input)="filterVideos()">
      
      <select class="form-control" style="max-width: 200px" 
              [(ngModel)]="selectedCategory" 
              (change)="filterVideos()">
        <option *ngFor="let cat of categories" [value]="cat.value">{{cat.label}}</option>
      </select>
      
      <button class="btn btn-primary" (click)="selectAll()">Select All</button>
      <button class="btn btn-secondary" (click)="clearSelection()">Clear</button>
      <button class="btn btn-success" [disabled]="selectedVideos.size === 0" 
              (click)="addToWorkout()">
        Add to Workout ({{selectedVideos.size}})
      </button>
    </div>
        </select>
        <input 
          type="text" 
          [(ngModel)]="searchText" 
          (input)="onSearch()"
          placeholder="Search videos, tags, or transcriptions..."
          class="search-input">
      </div>
    </div>
  </div>

  <div class="tag-filter" *ngIf="allTags.length > 0">
    <div class="filter-header">
      <h3>Filter by Tags</h3>
      <button (click)="clearFilters()" class="clear-btn">Clear All</button>
    </div>
    <div class="tag-cloud">
      <button 
        *ngFor="let tag of allTags.slice(0, 20)" 
        [class.active]="selectedTags.includes(tag)"
        (click)="toggleTag(tag)"
        class="filter-tag">
        {{tag}}
      </button>
    </div>
  </div>

  <div *ngIf="isLoading" class="loading">
    <div class="spinner-border"></div>
    <p>Loading videos...</p>
  </div>

  <div *ngIf="!isLoading && filteredVideos.length === 0" class="no-videos">
    <p>No videos found</p>
  </div>

  <div *ngIf="!isLoading && filteredVideos.length > 0">
    <div class="pagination-info">
      Showing {{(currentPage - 1) * itemsPerPage + 1}} - {{currentPage * itemsPerPage > filteredVideos.length ? filteredVideos.length : currentPage * itemsPerPage}} of {{filteredVideos.length}} videos
    </div>
    <div class="video-grid">
      <div *ngFor="let video of paginatedVideos" class="video-card">
      <div class="video-thumbnail" (click)="playVideo(video)">
        <img *ngIf="video.thumbnail" 
             [src]="video.thumbnail" 
             [alt]="video.title"
             (error)="onThumbnailError($event, video)"
             class="thumbnail-image">
        <div *ngIf="!video.thumbnail || video.thumbnailError" class="placeholder-thumbnail">
          <div class="play-icon">▶</div>
        </div>
        <div class="thumbnail-overlay">
          <div class="play-button">▶</div>
        </div>
        <span class="duration">{{video.duration}}</span>
      </div>
      <div class="video-info">
        <h4>{{video.title}}</h4>
        <div class="video-tags">
          <span class="category">{{video.category}}</span>
          <span *ngFor="let tag of video.tags" class="tag">{{tag}}</span>
        </div>
        <div *ngIf="video.transcription" class="transcription-status">
          <span class="transcribed">✓ Transcribed</span>
        </div>
      </div>
      </div>
    </div>
    <div class="pagination-controls">
      <button (click)="previousPage()" [disabled]="currentPage === 1" class="btn btn-secondary">Previous</button>
      <span class="page-info">Page {{currentPage}} of {{totalPages}}</span>
      <button (click)="nextPage()" [disabled]="currentPage === totalPages" class="btn btn-secondary">Next</button>
    </div>
  </div>
</div>
